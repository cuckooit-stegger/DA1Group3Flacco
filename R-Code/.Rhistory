ylab="2 PC", zlab="3 PC", col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
bfeats3.ela.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==5 & bfeats3[,1]==1),19:58], centers=2, nstart=25)
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.cm.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=random, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_ran.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=funnel, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_fun.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.cm.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=funnel, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_fun.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=funnel, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_fun.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.cm.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=75, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=75, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==5 & bfeats3[,1]==1),3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
kmeans_wss.custom(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),19:58], 12, main="ELA features")
kmeans_wss.custom(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),19:58], 12, main="ELA features")
kmeans_wss.custom(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], 12, main="CM features")
kmeans_wss.custom(bfeats3.s[,19:58], 12, main="ELA features")
bfeats3.ela.clust2 = kmeans(bfeats3.s[,19:58], centers=2, nstart=25)
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[,1],
bfeats3.pca_cor.cm$scores[,2],
bfeats3.pca_cor.cm$scores[,3],
angle=20, main="3D Scatterplot on 1., 2., 3. CM-PC (block=3, top=fun, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6],
m="Scatterplot on ELA-PCs (2 clusters)",
col=colors[bfeats3.top_ran.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6],
m="Scatterplot on ELA-PCs (2 clusters)",
col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:6],
m="Scatterplot on ELA-PCs (2 clusters)",
col=colors[bfeats3.ela.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=75, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=75, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=75, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
which(bfeats3.clust2$cluster ==1 & bfeats3[,1]==1)
length(which(bfeats3.clust2$cluster ==1 & bfeats3[,1]==1))
length(which(bfeats3.clust2$cluster ==2 & bfeats3[,1]==2))
length(which(bfeats3.ela.clust2$cluster ==2 & bfeats3[,1]==2)) # 1352
length(which(bfeats3.ela.clust2$cluster ==2 & bfeats3[,1]==2)) # 1352
length(which(bfeats3.ela.clust2$cluster ==1 & bfeats3[,1]==1)) # 1352
length(which(bfeats3.ela.clust2$cluster ==2 & bfeats3[,1]==1)) # 1352
length(which(bfeats3.ela.clust2$cluster ==1 & bfeats3[,1]==2)) # 1352
length(which(bfeats3.ela.clust2$cluster ==1 & bfeats3[,1]==2)) # 1410
length(which(bfeats3.ela.clust2$cluster ==2 & bfeats3[,1]==1)) # 971
(1410+1352)/2880
(1410+971)/2880
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs (2 clusters)", col=colors[bfeats3.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (5 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust5$cluster], legend.title="Cluster",
legend.text=c("1", "2", "3", "4", "5"), legend.col=colors[1:5])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs (block==3, 2 clusters)",
col=colors[bfeats3.block3.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1], bfeats3.pca_cor$scores[which(metadata3[,1]==3),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block==3, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.block3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1:6],
m="Scatterplot on PCs (block=3, top=funnel, 2 clusters)",
col=colors[bfeats3.top_fun.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=funnel, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_fun.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1:6],
m="Scatterplot on PCs (block=3, top=random, 2 clusters)",
col=colors[bfeats3.top_ran.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=random, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_ran.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
#clusters 96% correct
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
#clusters already 83% correctly
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using only ELA-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.cm.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==2),2:18], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=80, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=150, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.cm.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.cm.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.ela.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=0, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.ela_ran.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using only ELA-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela_ran.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.ela.clust2 = kmeans(bfeats3.s[,19:58], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
#clusters 96% correct
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
#clusters already 83% correctly
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using only ELA-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
require(stats)
sapply(c("average", "single", "complete"),
function(method) plot(hclust(dist(iris[,-5]), method),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram nn(", method,
" linkage)", sep = ""),
cex = 2, cex.axis = 2, cex.lab = 2, cex.main = 2))
layout(matrix(1:3, ncol=3))
sapply(c("average", "single", "complete"),
function(method) plot(hclust(dist(iris[,-5]), method),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram nn(", method,
" linkage)", sep = ""),
cex = 2, cex.axis = 2, cex.lab = 2, cex.main = 2))
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:3, ncol=3))
sapply(c("average", "single", "complete"),
function(method) plot(hclust(dist(iris[,-5]), method),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram nn(", method,
" linkage)", sep = ""),
cex = 2, cex.axis = 2, cex.lab = 2, cex.main = 2))
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:3, ncol=3))
sapply(c("average", "single", "complete"),
function(method) plot(hclust(dist(iris[,-5]), method),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram nn(", method,
" linkage)", sep = ""),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:6, ncol=3))
sapply(c("average", "single", "complete"),
function(method) plot(hclust(dist(iris[,-5]), method),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram nn(", method,
" linkage)", sep = ""),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
aggl_dend.custom <- function(data, methods=c("single", "complete", "average")) {
#set margin settings and layout
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:6, ncol=3))
#create dendrograms applying different methods
sapply(methods,
function(x) plot(hclust(dist(data), x),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram(" , x,
" linkage)"),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
}
aggl_dend.custom(iris[,-5])
aggl_dend.custom(iris[,-5])
aggl_dend.custom(iris[,1:2])
?hclust
#custom function for creating dendrograms with agglomerative clustering to the
#methods defind in the parameter settings
aggl_dend.custom <- function(data, methods=c("single", "complete", "average", "centroid", "ward.D", "ward.D2")) {
#set margin settings and layout
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:6, ncol=3, byrow=TRUE))
#create dendrograms applying different methods
sapply(methods,
function(x) plot(hclust(dist(data), x),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram(" , x,
" linkage)"),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
}
aggl_dend.custom(iris[,1:2])
aggl_dend.custom(bfeats3[,2:58])
aggl_dend.custom <- function(data, methods=c("single", "complete", "average", "centroid", "ward.D", "ward.D2")) {
#set margin settings and layout
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:6, ncol=3, byrow=TRUE))
#create dendrograms applying different methods
sapply(methods,
function(x) plot(hclust(dist(data), x),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram(", x,
" linkage)"),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
}
aggl_dend.custom(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),2:58])
aggl_dend.custom(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==2),2:58])
aggl_dend.custom(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18])
aggl_dend.custom(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58])
aggl_dend.custom(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),19:58])
aggl_dend.custom(bfeats3[which(metadata3[,1]==3),19:58])
