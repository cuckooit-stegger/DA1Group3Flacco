round(summary(bfeats3.pca_cor.cm, loadings = TRUE)$loadings[,1:5], 3)
bfeats3.pca_cor.ela = princomp(bfeats3[,c(19:48,50:58)], cor=TRUE, scores=TRUE)
#examine resulting PCs
#9 PCs needed for explaining 80 % of overall variance
summary(bfeats3.pca_cor.ela)
#plot scree diagram
#for deciding on appropriate number of PCs
plot(bfeats3.pca_cor.ela$sdev, type="b", main="Scree diagram ELA-PCA on cor", xlab="Component number", ylab="Component variance")
#the scree diagram shows up a kink after PCs 5. So we consider that to be an appropriate number of PCs
#they result in explaining about 88% of overall variance and are still practical for analysis
plot(bfeats3.pca_cor.ela$sdev, type="b", main="Scree diagram ELA-PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(5, bfeats3.pca_cor.ela$sdev[5], col="red", cex=2.5, lwd=1.5, pch=1)
#biplot
biplot(bfeats3.pca_cor.ela, main="Biplot of ELA-PCA based on cor")
#show factors of components
round(summary(bfeats3.pca_cor.ela, loadings = TRUE)$loadings[,1:5], 3)
set.seed(1906)
kmeans_wss.custom <- function(data, max_clust, main="Kmeans WSS") {
n = nrow(data)
#variables for wss
wss = rep(0,max_clust)
#compute wss for one cluster
wss[1] = (n - 1) * sum(apply(data,2,  var))
#compute WSS for different number of clusters
for(i in 2:max_clust) {
#compute wss and use certain number of rep for centers
wss[i] = sum(kmeans(data, centers=i, nstart=25)$withinss)
}
#screeplot for different WSS amounts
#for deciding on number of clusters which is optimal
#normal scale and log scale
layout(matrix(1:2, ncol=2))
plot(wss, type="b", main=paste("WSS of kmeans for ", main), xlab="Num of clusters", ylab="WSS")
plot(log(wss), type="b", main=paste("log(WSS) of kmeans for ", main), xlab="Num of clusters", ylab="log(WSS)")
}
bfeats3.s = sweep(bfeats3, 2, sapply(bfeats3, function(x) diff(range(x))), FUN='/')
kmeans_wss.custom(bfeats3.s, 12, main="whole dataset")
bfeats3.clust2 = kmeans(bfeats3.s, centers=2, nstart=25)
bfeats3.clust5 = kmeans(bfeats3.s, centers=5, nstart=25)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs (2 clusters)", col=colors[bfeats3.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom <- function(x, y, z, angle, main, xlab, ylab, zlab, col, legend.text, legend.col, legend.title) {
#reset window settings
par.reset(main = main)
layout(rbind(1,2), heights=c(7,1))
scatterplot3d(x, y, z, angle=angle, pch=19, cex.lab=1, type="p", main=main, xlab=xlab,
ylab=ylab, zlab=zlab, color=col)
par(mar=c(0,0,0,0))
plot.new()
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
#reset normal settings
layout(matrix(1, ncol=1))
par(mar=c(8,5,5,5))
dev.off()
}
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
require(scatterplot3d)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
pdf.create=F
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
par.reset
pdf.create
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom <- function(x, y, z, angle, main, xlab, ylab, zlab, col, legend.text, legend.col, legend.title) {
#reset window settings
par.reset(main = main)
layout(rbind(1,2), heights=c(7,1))
scatterplot3d(x, y, z, angle=angle, pch=19, cex.lab=1, type="p", main=main, xlab=xlab,
ylab=ylab, zlab=zlab, color=col)
par(mar=c(0,0,0,0))
plot.new()
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
#reset normal settings
layout(matrix(1, ncol=1))
par(mar=c(8,5,5,5))
#dev.off()
}
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (5 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.clust5$cluster], legend.title="Cluster",
legend.text=c("1", "2", "3", "4", "5"), legend.col=colors[1:5])
bfeats3.block3.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3),], centers=2, nstart=25)
bfeats3.block3.clust2$centers * sapply(bfeats3, function(x) diff(range(x)))
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs (block==3, 2 clusters)",
col=colors[bfeats3.block3.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1], bfeats3.pca_cor$scores[which(metadata3[,1]==3),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block==3, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.block3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
bfeats3.top_fun.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),], centers=2, nstart=25)
bfeats3.top_ran.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==2),], centers=2, nstart=25)
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=funnel, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_fun.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC (block=3, top=random, 2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.top_ran.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
bfeats3.cm.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3 & bfeats3[,1]==1),3],
angle=20, main="Clustering using only CM-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.cm.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.ela.clust2 = kmeans(bfeats3.s[,19:58], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
#clusters 96% correct
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
#clusters already 83% correctly
scatterplot3d(bfeats3.pca_cor.ela$scores[,1],
bfeats3.pca_cor.ela$scores[,2],
bfeats3.pca_cor.ela$scores[,3],
angle=115, main="Clustering using only ELA-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.ela_ran.clust2 = kmeans(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58], centers=2, nstart=25)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_ran.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3 & bfeats3[,1]==2),3],
angle=340, main="Clustering using only ELA-Features", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.ela_ran.clust2$cluster], cex.lab=1, type="p", pch=19)
apply(bfeats3.pca_cor, 1, range)
apply(bfeats3.pca_cor, 2, range)
apply(bfeats3.pca_cor$scores, 1, range)
apply(bfeats3.pca_cor$scores, 2, range)
?apply
apply(bfeats3.pca_cor$scores[,1:3], 2, range)
kmeans_wss.custom(sweep(bfeats3.pca_cor[,1:3], 2, sapply(bfeats3.pca_cor[,1:3], function(x) diff(range(x))), FUN='/'),
12, main="whole dataset")
kmeans_wss.custom(sweep(bfeats3.pca_cor[,1:3], 2, sapply(bfeats3.pca_cor[,1:3], function(x) diff(range(x))), FUN='/'),
12, main="based on 3 PCs")
sweep(bfeats3.pca_cor[,1:3], 2, sapply(bfeats3.pca_cor[,1:3], function(x) diff(range(x)))
)
sweep(bfeats3.pca_cor[,1:3], 2, sapply(bfeats3.pca_cor[,1:3], function(x) diff(range(x))), FUN='/')
bfeats3.pca_cor[,1:3]
kmeans_wss.custom(sweep(bfeats3.pca_cor$scores[,1:3], 2, sapply(bfeats3.pca_cor$scores[,1:3], function(x) diff(range(x))), FUN='/'),
12, main="based on 3 PCs")
bfeats3.pca_cor$scores[,1:3]
sapply(bfeats3.pca_cor$scores[,1:3], function(x) diff(range(x)))
apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x)))
sweep(bfeats3.pca_cor$scores[,1:3], 2, apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x))), FUN='/')
kmeans_wss.custom(sweep(bfeats3.pca_cor$scores[,1:3], 2, apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x))), FUN='/'),
12, main="based on 3 PCs")
bfeats3.pca_cor.clust2 = kmeans(sweep(bfeats3.pca_cor$scores[,1:3], 2,
apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x))), FUN='/'),
centers=2, nstart=25)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs (2 clusters from PC)",
col=colors[bfeats3.pca_cor.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor$scores[,1],
bfeats3.pca_cor$scores[,2],
bfeats3.pca_cor$scores[,3],
angle=115, main="Clustering using all features", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], pch=19, cex.lab=1, type="p")
scatterplot3d(bfeats3.pca_cor$scores[,1],
bfeats3.pca_cor$scores[,2],
bfeats3.pca_cor$scores[,3],
angle=115, main="Clustering using 3 PCs", xlab="1 PC",
ylab="2 PC", zlab="3 PC",color=colors[bfeats3.pca_cor.clust2$cluster], cex.lab=1, type="p", pch=19)
bfeats3.pca_cor.clust2 = kmeans(sweep(bfeats3.pca_cor$scores[,1:3], 2,
apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x))), FUN='/'),
centers=3, nstart=25)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs (2 clusters from PC)",
col=colors[bfeats3.pca_cor.clust2$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
bfeats3.pca_cor.clust2 = kmeans(sweep(bfeats3.pca_cor$scores[,1:3], 2,
apply(bfeats3.pca_cor$scores[,1:3], 2,  function(x) diff(range(x))), FUN='/'),
centers=2, nstart=25)
section.new("2-3-2")
aggl_dend.custom <- function(data, methods=c("single", "complete", "average", "centroid", "ward.D", "ward.D2")) {
#set margin settings and layout
par(mar = c(0, 5, 4, 2) + 0.1)
layout(matrix(1:6, ncol=3, byrow=TRUE))
#create dendrograms applying different methods
sapply(methods,
function(x) plot(hclust(dist(data), x),
hang = -1,
labels = FALSE,
las = 1,
xlab = "",
sub = "",
main = paste("Cluster Dendrogram(", x,
" linkage)"),
cex = 1, cex.axis = 1, cex.lab = 1, cex.main = 1))
}
aggl_dend.custom(bfeats3.s[,2:58])
bfeats3.aggl.wardD =  hclust(dist(bfeats3.s[,2:58]), method="ward.D")
bfeats3.aggl.wardD$group = cutree(bfeats3.aggl.wardD, k=2)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Agglomerative clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3.aggl.wardD$group], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)])
aggl_dend.custom(bfeats3.s[which(metadata3[,1]==3),2:58])
bfeats3.block3.aggl.wardD =  hclust(dist(bfeats3.s[which(metadata3[,1]==3),2:58]), method="ward.D")
bfeats3.block3.aggl.wardD$group = cutree(bfeats3.block3.aggl.wardD, k=2)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),3],
angle=200, main="Agglomerative Clustering (4 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.aggl.wardD$group],pch=19)
scatterplot3d(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),2],
bfeats3.pca_cor$scores[which(metadata3[,1]==3),3],
angle=200, main="Kmeans algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.clust2$cluster],pch=19)
aggl_dend.custom(bfeats3.s[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18])
bfeats3.block3.fun.aggl.av =  hclust(dist(bfeats3.s[which(metadata3[,1]==3& bfeats3[,1]==1),2:18]), method="average")
bfeats3.block3.fun.aggl.av$group = cutree(bfeats3.block3.fun.aggl.av, k=2)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=20, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=20, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.cm.clust2$cluster],pch=19)
aggl_dend.custom(bfeats3.s[which(metadata3[,1]==3, bfeats3[,1]==2),19:58])
bfeats3.block3.ran.aggl.av =  hclust(dist(bfeats3.s[which(metadata3[,1]==3& bfeats3[,1]==2),19:58]), method="ward.D")
bfeats3.block3.ran.aggl.av$group = cutree(bfeats3.block3.ran.aggl.av, k=2)
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (4 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19)
?diana
require(cluster)
?diana
dv = diana(bfeats3[1:1000,2:18], diss=FALSE, metric="euclidean", keep.diss=FALSE)
plot(dv)
(
bfeats3.dv = diana(bfeats3[1:1000,2:18], diss=FALSE, metric="euclidean", keep.diss=FALSE)
bfeats3.dv = diana(bfeats3[,2:18], diss=FALSE, metric="euclidean", keep.diss=FALSE)
plot(bfeats3.dv)
bfeats3.dv$cluster = cutree(as.hclust(bfeats3.dv), k=2)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs (2 clusters divisive)",
col=colors[bfeats3.dv$cluster],
legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[1:2])
layout(matrix(1:2, ncol=2))
scatterplot3d(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Agglomerative clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.aggl.wardD$group], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)], pch=19)
scatterplot3d(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Divisive clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.dv$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)], pch=19)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Agglomerative clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.aggl.wardD$group], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)], pch=19)
scatterplot3d(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Divisive clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.dv$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)], pch=19)
scatterplot3d(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="Divisive clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.clust2$cluster], legend.title="Cluster",
legend.text=c("1", "2"), legend.col=colors[c(1,2)], pch=19)
bfeats3.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
bfeats3.block3.ran.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==2),19:58], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
plot(bfeats3.block3.ran.dv)
plot(bfeats3.block3.ran.dv)
plot(bfeats3.block3.ran.dv)
bfeats3.block3.ran.dv$cluster = cutree(as.hclust(bfeats3.block3.ran.dv), k=2)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.dv$cluster],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19, cex=2)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.dv$cluster],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19, cex=2)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.dv$cluster],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19)
?scatterplot3d
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19, cex.symbols=2)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.dv$cluster],pch=19)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.ran.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.ela$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.ela_ran.clust2$cluster],pch=19, cex.symbols=1.5)
bfeats3.block3.fun.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==2),2:18], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
plot(bfeats3.block3.fun.dv)
bfeats3.block3.fun.dv$cluster = cutree(as.hclust(bfeats3.block3.fun.dv$cluster), k=2)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.cm_fun.clust2$cluster],pch=19, cex.symbols=1.5)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==2),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster],pch=19, cex.symbols=1.5)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster],pch=19, cex.symbols=1.5)
bfeats3.block3.fun.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
plot(bfeats3.block3.fun.dv)
#therefore split data to 3 clusters according to divisive clustering
bfeats3.block3.fun.dv$cluster = cutree(as.hclust(bfeats3.block3.fun.dv$cluster), k=2)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster],pch=19, cex.symbols=1.5)
bfeats3.block3.fun.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
bfeats3.block3.fun.dv = diana(bfeats3[which(metadata3[,1]==3 & bfeats3[,1]==1),2:18], diss=FALSE,
metric="euclidean", keep.diss=FALSE)
bfeats3.block3.fun.dv$cluster = cutree(as.hclust(bfeats3.block3.fun.dv), k=2)
layout(matrix(1:3, ncol=3))
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Agglomerative Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.aggl.av$group],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="Divisive Clustering (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.block3.fun.dv$cluster],pch=19, cex.symbols=1.5)
scatterplot3d(bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),1],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),2],
bfeats3.pca_cor.cm$scores[which(metadata3[,1]==3& bfeats3[,1]==1),3],
angle=80, main="KMeans Algorithm (2 clusters)", xlab="1 PC",
ylab="2 PC", zlab="3 PC", color=colors[bfeats3.top_fun.clust2$cluster],pch=19, cex.symbols=1.5)
