par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,0.9,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,1.2,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
if(legend.title != "no") {
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("topright",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
layout(matrix=(1, ncol=1))
layout(matrix(1, ncol=1))
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
if(legend.title != "no") {
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
str(metadata)
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,4]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,4]/20],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs.cor(bfeats.cm_conv)   #0.4015
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,5]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,6]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv", col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv", col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv", col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(dataframe(ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(bfeats.ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
str(bfeats.ela_curv)
str(bfeats.ela_local)
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4],
ela_curv.costs_runtime=bfeats.ela_conv[,23],
ela_local.costs_runtime=bfeats.ela_conv[,14],
peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4],
ela_curv.costs_runtime=bfeats.ela_curv[,23],
ela_local.costs_runtime=bfeats.ela_local[,14],
peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
str(bfeats.cm_grad)
str(bfeats.cm_conv)
str(bfeats.cm_angle)
pairs.custom(data.frame(cm_angle.costs_runtime=bfeats.cm_angle[,9],
cm_conv.costs_runtime=bfeats.cm_conv[,5],
cm_grad.costs_runtime=bfeats.cm_grad[,3],
peak=metadata[,4]), m="Correlation number of blocks with CM runtime")
#it can be seen that the with increasing number of blocks the costs of the CM functions increase
pairs.custom(data.frame(cm_angle.costs_runtime=bfeats.cm_angle[,9],
cm_conv.costs_runtime=bfeats.cm_conv[,5],
cm_grad.costs_runtime=bfeats.cm_grad[,3],
blocks=metadata[,1]), m="Correlation number of blocks with CM runtime")
#it can be seen that the with increasing number of peaks the costs of the ELA functions increase
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4],
ela_curv.costs_runtime=bfeats.ela_curv[,23],
ela_local.costs_runtime=bfeats.ela_local[,14],
peak=metadata[,4]), m="Correlation number of peaks with ELA runtime")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
#number of peaks has no significant influence;
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups")
cor.detect <- function(x, l=0) {
for(c in 1:ncol(x)) {
col1 = colnames(bfeats)[c]
if(c+1 < ncol(x)){
for(d in (c+1):ncol(x)) {
col2 = colnames(bfeats)[d]
cur.cor = cor(x[c], x[d])
#print(paste("cor(",col1, ",", col2,")=", cur.cor))
if(abs(cur.cor) >= l) {
print(paste("cor(",col1, ",", col2,") =", cur.cor))
}
}
}
}
}
cor.detect(bfeats)
cor.detect(bfeats, l=.9)
str(bfeats.cm_angle)
bfeats[300,]
bfeats[300,1:9]
scatterplot3d.custom(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (number of peaks)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
#scatterplot3d
#include package
require(scatterplot3d)
#custom function for scatterplot3d including legend on the bottom
scatterplot3d.custom <- function(x, y, z, angle, main, xlab, ylab, zlab, col, legend.text, legend.col, legend.title) {
layout(rbind(1,2), heights=c(7,1))
scatterplot3d(x, y, z, angle=angle, pch=19, cex.lab=1, type="p", main=main, xlab=xlab,
ylab=ylab, zlab=zlab, color=col)
par(mar=c(0,0,0,0))
plot.new()
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
layout(matrix(1, ncol=1))
}
scatterplot3d.custom(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (number of peaks)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
scatterplot3d.custom(prcomp_feat_groups$cm_angle, prcomp_feat_groups$cm_conv, prcomp_feat_groups$cm_grad,
angle=35, main="3D Scatterplot on CM-features (by num of peaks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
scatterplot3d.custom(prcomp_feat_groups$cm_angle, prcomp_feat_groups$cm_conv, prcomp_feat_groups$cm_grad,
angle=35, main="3D Scatterplot on CM-features (by num of blocks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
prcomp(bfeats.cm_angle, scale=TRUE)$loadings
summary(princomp(bfeats.cm_angle, scale=TRUE), loadings=TRUE)
str(bfeats.cm_angle)
str(prcomp(bfeats.cm_angle, scale=TRUE)$x[,1])
str(prcomp(bfeats.cm_conv, scale=TRUE)$x[,1])
str(prcomp(bfeats.cm_grad, scale=TRUE)$x[,1])
summary(prcomp(bfeats.cm_angle, scale=TRUE))
summary(prcomp(bfeats.cm_conv, scale=TRUE))  #48.34%
summary(princomp(bfeats.cm_angle, corr=TRUE), loadings=TRUE)
summary(prcomp(bfeats.cm_angle, scale=TRUE))  #48.34%
p1=prcomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)
?princomp
p1=princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)
p1
str(p1$scores)
?prcomp
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1]
prcomp_feat_groups = data.frame(
bfeats.topology,
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, scale=TRUE, scores=TRUE)$scores[,1])
prcomp_feat_groups = data.frame(
bfeats.topology,
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1])
summary(princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE))  #48.34%
summary(princomp(bfeats.cm_conv, corr=TRUE, scores=TRUE))  #57.07%
summary(princomp(bfeats.cm_grad, corr=TRUE, scores=TRUE))  #48.34%
summary(princomp(bfeats.ela_conv, corr=TRUE, scores=TRUE))  #48.34%
summary(princomp(bfeats.ela_curv, corr=TRUE, scores=TRUE))  #48.34%
summary(princomp(bfeats.ela_local, corr=TRUE, scores=TRUE))  #48.34%
prcomp_feat_groups = data.frame(
bfeats.topology,
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1])
#check the amount of variance covered by first PC for each group
summary(princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE))  #93.30%
summary(princomp(bfeats.cm_conv, corr=TRUE, scores=TRUE))  #73.38%
summary(princomp(bfeats.cm_grad, corr=TRUE, scores=TRUE))  #95.55%
summary(princomp(bfeats.ela_conv, corr=TRUE, scores=TRUE))  #99.99%
summary(princomp(bfeats.ela_curv, corr=TRUE, scores=TRUE))  #60.06%
summary(princomp(bfeats.ela_local, corr=TRUE, scores=TRUE))  #99.80%
#column names
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
princomp_feat_groups = data.frame(
bfeats.topology,
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1])
#check the amount of variance covered by first PC for each group
summary(princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE))  #93.30%
summary(princomp(bfeats.cm_conv, corr=TRUE, scores=TRUE))  #73.38%
summary(princomp(bfeats.cm_grad, corr=TRUE, scores=TRUE))  #95.55%
summary(princomp(bfeats.ela_conv, corr=TRUE, scores=TRUE))  #99.99%
summary(princomp(bfeats.ela_curv, corr=TRUE, scores=TRUE))  #60.06%
summary(princomp(bfeats.ela_local, corr=TRUE, scores=TRUE))  #99.80%
#column names
colnames(princomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs.custom(princomp_feat_groups, m="Correlation between Feature Groups")
#possible by one datacolumn in the scatterplot
princomp_feat_groups = data.frame(
bfeats.topology,
princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.cm_grad, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.ela_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.ela_curv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats.ela_local, corr=TRUE, scores=TRUE)$scores[,1])
#check the amount of variance covered by first PC for each group
summary(princomp(bfeats.cm_angle, corr=TRUE, scores=TRUE))  #93.30%
summary(princomp(bfeats.cm_conv, corr=TRUE, scores=TRUE))  #73.38%
summary(princomp(bfeats.cm_grad, corr=TRUE, scores=TRUE))  #95.55%
summary(princomp(bfeats.ela_conv, corr=TRUE, scores=TRUE))  #99.99%
summary(princomp(bfeats.ela_curv, corr=TRUE, scores=TRUE))  #60.06%
summary(princomp(bfeats.ela_local, corr=TRUE, scores=TRUE))  #99.80%
#column names
colnames(princomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs.custom(princomp_feat_groups, m="Correlation between Feature Groups")
pairs.custom(princomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
require(scatterplot3d)
#custom function for scatterplot3d including legend on the bottom
scatterplot3d.custom <- function(x, y, z, angle, main, xlab, ylab, zlab, col, legend.text, legend.col, legend.title) {
layout(rbind(1,2), heights=c(7,1))
scatterplot3d(x, y, z, angle=angle, pch=19, cex.lab=1, type="p", main=main, xlab=xlab,
ylab=ylab, zlab=zlab, color=col)
par(mar=c(0,0,0,0))
plot.new()
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (prob.seed)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,5]], legend.col=colors[1:5],
legend.title = "Prob.seed", legend.text = c("1", "2", "3", "4", "5"))
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (prob.seed)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:5],
legend.title = "Prob.seed", legend.text = c("1", "2", "3", "4", "5"))
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (prob.seed)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,6]], legend.col=colors[1:5],
legend.title = "Prob.seed", legend.text = c("1", "2", "3", "4", "5"))
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (prob.seed)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,1]], legend.col=colors[1:5],
legend.title = "Prob.seed", legend.text = c("1", "2", "3", "4", "5"))
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (prob.seed)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,5]], legend.col=colors[1:5],
legend.title = "Prob.seed", legend.text = c("1", "2", "3", "4", "5"))
scatterplot3d.custom(princomp_feat_groups$ela_conv, princomp_feat_groups$ela_curv, princomp_feat_groups$ela_local,
angle=35, main="3D Scatterplot on ELA-features (number of peaks)", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=35, main="3D Scatterplot on CM-features", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=35, main="3D Scatterplot on CM-features (by num of blocks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=35, main="3D Scatterplot on CM-features (by num of peaks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=65, main="3D Scatterplot on CM-features (by num of blocks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=105, main="3D Scatterplot on CM-features (by num of blocks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(princomp_feat_groups$cm_angle, princomp_feat_groups$cm_conv, princomp_feat_groups$cm_grad,
angle=55, main="3D Scatterplot on CM-features (by num of blocks)", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs.cor(princomp_feat_groups)   #0.4809  correlation of cerrtain groups drives overall correlation
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
scatterplot3d.custom(bfeats.cm_angle[,1], bfeats.cm_angle[,3], bfeats.cm_angle[,7],
angle=35, main="3D Scatterplot on ELA-features", xlab="ela_conv", ylab="ela_curv",
zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL,legend.text=NULL)
str(bfeats.cm_angle)
scatterplot3d.custom(bfeats.cm_angle[,1], bfeats.cm_angle[,3], bfeats.cm_angle[,7],
angle=35, main="3D Scatterplot on ELA-features", xlab="dist_ctr2best.mean", ylab="dist_ctr2worst.mean",
zlab="y_ratio_best2worst.mean",col=colors[metadata[,1]], legend.title="no", legend.col=NULL,legend.text=NULL)
scatterplot3d.custom(bfeats.cm_angle[,1], bfeats.cm_angle[,3], bfeats.cm_angle[,7],
angle=35, main="3D Scatterplot on ELA-features", xlab="dist_ctr2best.mean", ylab="dist_ctr2worst.mean",
zlab="y_ratio_best2worst.mean", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv")
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv")
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local (extract)")
cor.detect(bfeats, l=.9)
str()
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[1], legend.title="no",
legend.text=NULL, legend.col=NULL)
str(bfeats.cm_grad)
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
cor.detect(bfeats[2:16], l=.7)
str(bfeats[,2:16])
cor.detect(bfeats[,2:16], l=.7)
scatterplot3d.custom(bfeats.cm_angle[,7], bfeats.cm_conv[,4], bfeats.cmgrad[,1],
angle=35, main="3D Scatterplot on features within cm_angle", xlab="y_ratio_best2worst.mean", ylab="concave.soft",
zlab="y_ratio_best2worst.mean", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(bfeats.cm_angle[,7], bfeats.cm_conv[,4], bfeats.cm_grad[,1],
angle=35, main="3D Scatterplot on features within cm_angle", xlab="y_ratio_best2worst.mean", ylab="concave.soft",
zlab="y_ratio_best2worst.mean", col=colors[metadata[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
cor.detect(bfeats[18:59], l=.7)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,1],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[1], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[1], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[metadata[,4]/20], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats[,1]], legend.title="no",
legend.text=NULL, legend.col=NULL)
str(bfeats[,1])
head(bfeats[,1])
bfeats[,1]
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats.topology[,1]], legend.title="Topology",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats.topology], legend.title="Topology",
legend.text=NULL, legend.col=NULL)
View(bfeats)
View(afeats)
scatterplot3d.custom(bfeats.ela_conv[,1], bfeats.ela_curv[,3], bfeats.ela_local[,3],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats.topology], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats.topology], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[1], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_curv[,3], bfeats.ela_curv[,10], bfeats.ela_curv[,17],
angle=35, main="3D Scatterplot on features within ela_curv features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[bfeats.topology], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats.ela_curv[,3], bfeats.ela_curv[,10], bfeats.ela_curv[,17],
angle=35, main="3D Scatterplot on features within ela_curv features", xlab="grad_norm.mean", ylab="grad_scale.mean",
zlab="hessian_cond.mean", col=colors[bfeats.topology], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats.ela_curv[,3], bfeats.ela_curv[,10], bfeats.ela_curv[,17],
angle=35, main="3D Scatterplot on features within ela_curv features", xlab="grad_norm.mean", ylab="grad_scale.mean",
zlab="hessian_cond.mean", col=colors[metadata[,4]/20], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats.ela_curv[,3], bfeats.ela_curv[,10], bfeats.ela_curv[,17],
angle=35, main="3D Scatterplot on features within ela_curv features", xlab="grad_norm.mean", ylab="grad_scale.mean",
zlab="hessian_cond.mean", col=colors[bfeats.topology], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[1:2])
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime", col=colors[metadata[,4]/20], legend.title="no",
legend.text=NULL, legend.col=NULL)
scatterplot3d.custom(bfeats.ela_conv[,4], bfeats.ela_curv[,23], bfeats.ela_local[,14],
angle=35, main="3D Scatterplot on runtime features within ela features", xlab="ela_conv.runtime", ylab="ela_curv.runtime",
zlab="ela_local.runtime",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
