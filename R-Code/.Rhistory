bfeats3.cm_angle = bfeats2.cm_angle[-c(out, out.cm, out.ela),]
bfeats3.cm_conv = bfeats2.cm_conv[-c(out, out.cm, out.ela),]
bfeats3.cm_grad = bfeats2.cm_grad[-c(out, out.cm, out.ela),]
bfeats3.ela_conv = bfeats2.ela_conv[-c(out, out.cm, out.ela),]
bfeats3.ela_curv = bfeats2.ela_curv[-c(out, out.cm, out.ela),]
bfeats3.ela_local = bfeats2.ela_local[-c(out, out.cm, out.ela),]
which(sapply(bfeats3[,1:length(bfeats3)], var)==0)
bfeats3 = bfeats3[,-50]
bfeats3.ela_local = bfeats3.ela_local[,-5]
save(list = ls(all=TRUE), file="../3-DataPreprocessing.RData")
bfeats3.pca_cor = princomp(bfeats3, cor=TRUE)
bfeats3.pca_cor = prcomp(bfeats3, scale=TRUE)
bfeats3.pca_cor = princomp(bfeats3, cor=TRUE)
cov(bfeats3)
which(cov(bfeats3)==0)
which(cov(bfeats3)<=0.01)
which(cov(bfeats3)<=0.0001)
which(cov(bfeats3)<=0.00000000000000000001)
cor(beats3)
cor(bfeats3)
which(cor(bfeats3)<=0.00000000000000000001)
which(cor(bfeats3)=0)
which(cor(bfeats3)==0)
eigen(cor(bfeats))
eigen(cor(bfeats3))
eigen(bfeats3[,1:10])$values
eigen(cor(bfeats3[,1:10]))$values
eigen(cor(bfeats3[,1:50]))$values
eigen(cor(bfeats3[,1:40]))$values
eigen(cor(bfeats3[,1:58]))$values
eigen(cor(bfeats3[,1:57]))$values
eigen(cor(bfeats3[,2:58]))$values
?princomp
eigen(cor(cars))$values
bfeats3.pca_cor = princomp(bfeats3[,1:10], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:30], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:40], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:50], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,2:50], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:45], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:46], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:47], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:48], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:49], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:48,50], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:48,50:51], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:48,50:55], cor=TRUE)
bfeats3.pca_cor = princomp(bfeats3[,1:48,50:58], cor=TRUE)
bfeats[,49]
bfeats3[,49]
var(bfeats3[,49])
var(bfeats3[,48])
which(sapply(bfeats3[,1:58], var) < 0.1)
which(sapply(bfeats3[,1:58], var) < 0.0001)
which(sapply(bfeats3[,1:58], var) < 0.0000001)
bfeats3.pca_cor = princomp(bfeats3[,-49], cor=TRUE)
summary(bfeats3.pca_cor)
plot(bfeats3.pca_cor)
plot(bfeats3.pca_cor, type="b")
plot(bfeats3.pca_cor, type="b")
plot(bfeats3.pca_cor$sdev, type="b")
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
plot(bfeats3.pca_cor$sdev^2, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(bfeats3.pcacor[,6]$sdev, col="red")
points(bfeats3.pca_cor[,6]$sdev, col="red")
points(bfeats3.pca_cor[6]$sdev, col="red")
points(bfeats3.pca_cor[6]$sdev, col="red", add=TRUE)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(bfeats3.pca_cor[6]$sdev, col="red", add=TRUE)
points(bfeats3.pca_cor[6]$sdev, col="red", cex=4)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(bfeats3.pca_cor[6]$sdev, col="red", cex=4)
plot(bfeats3.pca_cor[6]$sdev, col="red", cex=4, add=TRUE)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
point(bfeats3.pca_cor[6]$sdev, col="red", cex=4, add=TRUE)
points(bfeats3.pca_cor[6]$sdev, col="red", cex=4, add=TRUE)
points(6, bfeats3.pca_cor[6]$sdev, col="red", cex=4, add=TRUE)
points(6, bfeats3.pca_cor[6]$sdev, col="red", cex=4)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor[6]$sdev, col="red", cex=4)
points(6, bfeats3.pca_cor[6]$sdev, col="red", cex=4, pch=1)
bfeats3.pca_cor[6]$sdev
bfeats3.pca_cor[6]
nrow(bfeats3.pca_cor[1])
nrow(bfeats3.pca_cor[6])
bfeats3.pca_cor[6]
str(bfeats3.pca_cor)
str(bfeats3.pca_cor[6])
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=4, pch=1)
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2, pch=1)
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
bfeats3.pca_cor = princomp(bfeats3[,-49], cor=TRUE, scores=TRUE)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor (with kink)", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
biplot(bfeats3.pca_cor)
biplot(bfeats3.pca_cor[1,])
biplot(bfeats3.pca_cor)
biplot(bfeats3.pca_cov)
biplot(bfeats3.pca_cov, main="Biplot of PCA based on cov")
biplot(bfeats3.pca_cor, main="Biplot of PCA based on cr")
summary(bfeats3.pca_cor)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
str(bfeats3.pca_cor$scores)
pairs.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs")
pairs_noreg.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#different margins in case of legend
if(legend.title != "no") {
oma = c(4,4,6,12)
}
#plot the scatterplots
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs")
#function to draw a scatterplot without regression lines, because
#correlation of PCs is 0 from definition
pairs_noreg.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#different margins in case of legend
if(legend.title != "no") {
oma = c(4,4,6,12)
}
#plot the scatterplots
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs")
metadata2 = metadata[-out,]
metadata3 = metadata2[-c(out, out.cm, out.ela)]
str(metadata3)
str(bfeats3)
out = which(abs(bfeats.scale_max) > 4.5)
metadata2 = metadata[-out,]
bfeats2.distances = distances.custom(bfeats2)
#calculate 99.99 % quantile for dataset
bfeats2.limit = qchisq(0.9999, df=ncol(bfeats2))
#identify outliers based on limit
#47 outliers:
#356  439  444  446  453  458  470  547  548  549  552  554  555  559  560  561  563
#564  566  610  668  676 1222 1420 1423 1424 1530 1531
#1537 1538 1539 1540 1541 1542 1543 1544 1590 1637 2398 2508 2511 2513 2515 2516 2517 2518 2606
out = which(bfeats2.distances > bfeats2.limit)
#identify outliers in feature groups of CM (most are the same as in whole dataset)
#calculate distances
bfeats2.distances.cm = distances.custom(bfeats2[,2:18])
#calculate 99.99 % quantile for dataset
bfeats2.limit.cm = qchisq(0.9999, df=ncol(bfeats2[,2:18]))
#identify outliers based on limit
#45 outliers:
#356  439  444  446  453  458  470  547  548  549  552  554  555  559  560  561
#563  564  566  610  668  676 1222 1420 1423 1424 1530 1531
#1537 1538 1539 1540 1541 1542 1543 1544 1590 1637 2398 2508 2511 2513 2515 2516 2517 2518 2606
out.cm = which(bfeats2.distances.cm > bfeats2.limit.cm)
#identify outliers in feature groups of ELA (some additional outliers)
#calculate distances
bfeats2.distances.ela = distances.custom(bfeats2[,19:59])
#calculate 99.99 % quantile for dataset
bfeats2.limit.ela = qchisq(0.9999, df=ncol(bfeats2[,19:59]))
#identify outliers based on limit
#91 outliers:
#231  280  323  336  360  362  364  366  369  400  402  407  438  440  443  446  454  456
#457  459  462  540  541  542  543  544  545  546
#547  634  642 1118 1323 1325 1329 1330 1333 1363 1365 1369 1389 1401 1402 1414 1415
#1416 1417 1502 1503 1504 1505 1506 1507 1509 1533 1545
#1578 1581 1596 1598 1614 2095 2135 2137 2281 2282 2300 2317 2322 2326 2345 2360
#2361 2365 2382 2383 2386 2468 2469 2470 2471 2472 2473 2474
#2475 2476 2477 2478 2514 2562 2564
out.ela = which(bfeats2.distances.ela > bfeats2.limit.ela)
metadata3 = metadata2[-c(out, out.cm, out.ela)]
str(metadata3)
str(metadata)
str(bfeats)
str(bfeats2)
str(metadata2)
metadata3 = metadata2[-c(out, out.cm, out.ela),]
str(metadata3)
save(list = ls(all=TRUE), file="../3-DataPreprocessing.RData")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,1]==3])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,6]])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,5]])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,4]/20)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,4]/20])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==3),1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==5),1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==7),1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==7),1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
metadata[,1]==7
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==7),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==3),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==5),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata[,1]==3),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,1]])
str(bfeats3.scores)
str(bfeats3.pca_cor$scores)
str(bfeats3.pca_cor$scores[,1])
str(bfeats3.pca_cor$scores[,2])
str(bfeats3.pca_cor$scores[which(metadata[,1]==3),2])
str(bfeats3.pca_cor$scores[which(metadata[,1]==5),2])
str(bfeats3.pca_cor$scores[which(metadata[,1]==7),2])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,4]/20],
, legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,4]/20],
, legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==5),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==5),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==7),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,4]/20],
, legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
, legend.title = "Number of peaks")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,4]/20]
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,4]/20],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
pairs_noreg.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#different margins in case of legend
if(legend.title != "no") {
oma = c(4,4,6,12)
}
#plot the scatterplots
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs_noreg.custom(bfeats3.pca_cor$scores[which(metadata3[,1]==3),1:6], m="Scatterplot on PCs",
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,5]],
legend.title = "Prob.seed", legend.text = c("1", "2", "3",
"4", "5"),legend.col=colors[1:5])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata[,6]],
legend.title = "Repl", legend.text = c("1", "2", "3",
"4", "5", "6", "7", "8","9", "10"),
legend.col=colors[1:10])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[bfeats3[,1]],
legend.title = "Repl", legend.text = c("1", "2", "3",
"4", "5", "6", "7", "8","9", "10"),
legend.col=colors[1:10])
bfeats3.pca_cov = princomp(bfeats3[,-1], cor=FALSE)
summary(bfeats3.pca_cov)
biplot(bfeats3.pca_cov, main="Biplot of PCA based on cov")
round(summary(bfeats3.pca_cov, loadings = TRUE)$loadings[,1:2], 3)
bfeats3.pca_cor = princomp(bfeats3[,-c(1,49)], cor=TRUE, scores=TRUE)
summary(bfeats3.pca_cor)
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
plot(bfeats3.pca_cor$sdev, type="b", main="Scree diagram PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(6, bfeats3.pca_cor$sdev[6], col="red", cex=2.5, lwd=1.5, pch=1)
biplot(bfeats3.pca_cor, main="Biplot of PCA based on cor")
round(summary(bfeats3.pca_cov, loadings = TRUE)$loadings[,1:6], 3)
round(summary(bfeats3.pca_cor, loadings = TRUE)$loadings[,1:6], 3)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs")
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[bfeats3[,1]],
legend.title = "Topology", legend.text = c("funnel", "random"),
legend.col=colors[1:10])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=35, main="3D Scatterplot on 1., 2., 3. PC", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
require(scatterplot3d)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=35, main="3D Scatterplot on 1., 2., 3. PC", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=55, main="3D Scatterplot on 1., 2., 3. PC", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[metadata3[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(bfeats3.pca_cor$scores[,1], bfeats3.pca_cor$scores[,2], bfeats3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3[,1]], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[c(1,2)])
bfeats3.pca_cor.cm = princomp(bfeats3[,2:18], cor=TRUE, scores=TRUE)
summary(bfeats3.pca_cor.cm)
plot(bfeats3.pca_cor.cm$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
pairs_noreg.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#different margins in case of legend
if(legend.title != "no") {
oma = c(4,4,6,12)
}
#plot the scatterplots
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
par(oma = c(4,4,6,6))
}
par(mar=c(8,5,5,5))
plot(bfeats3.pca_cor.cm$sdev, type="b", main="Scree diagram PCA on cor", xlab="Component number", ylab="Component variance")
summary(bfeats3.pca_cor.cm)
plot(bfeats3.pca_cor.cm$sdev, type="b", main="Scree diagram PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(5, bfeats3.pca_cor.cm$sdev[5], col="red", cex=2.5, lwd=1.5, pch=1)
plot(bfeats3.pca_cor.cm$sdev, type="b", main="Scree diagram CM-PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(5, bfeats3.pca_cor.cm$sdev[5], col="red", cex=2.5, lwd=1.5, pch=1)
biplot(bfeats3.pca_cor.cm, main="Biplot of CM-PCA based on cor")
round(summary(bfeats3.pca_cor.cm, loadings = TRUE)$loadings[,1:5], 3)
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on CM-PCs")
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on CM-PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on CM-PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#different margins in case of legend
if(legend.title != "no") {
oma = c(4,4,6,12)
}
#plot the scatterplots
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on CM-PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
par(oma = c(4,4,5,12))
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
par(xpd=TRUE)
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor$scores[,1:6], m="Scatterplot on PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on CM-PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor.cm$scores[,1:5], m="Scatterplot on PCs", col=colors[bfeats3[,1]],
legend.title = "Topology", legend.text = c("funnel", "random"),
legend.col=colors[1:10])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[,1], bfeats3.pca_cor.cm$scores[,2], bfeats3.pca_cor.cm$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. CM-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[,1], bfeats3.pca_cor.cm$scores[,2], bfeats.cm3.pca_cor$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[metadata3[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[,1], bfeats3.pca_cor.cm$scores[,2], bfeats3.pca_cor.cm$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[metadata3[,1]], legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
scatterplot3d.custom(bfeats3.pca_cor.cm$scores[,1], bfeats3.pca_cor.cm$scores[,2], bfeats3.pca_cor.cm$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. CM-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3[,1]], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[c(1,2)])
bfeats3.pca_cor.cm = princomp(bfeats3[,19:58], cor=TRUE, scores=TRUE)
bfeats3.pca_cor.cm = princomp(bfeats3[,c(19:48,50:58)], cor=TRUE, scores=TRUE)
bfeats3.pca_cor.cm = princomp(bfeats3[,2:18], cor=TRUE, scores=TRUE)
bfeats3.pca_cor.ela = princomp(bfeats3[,c(19:48,50:58)], cor=TRUE, scores=TRUE)
summary(bfeats3.pca_cor.ela)
plot(bfeats3.pca_cor.ela$sdev, type="b", main="Scree diagram ELA-PCA on cor", xlab="Component number", ylab="Component variance")
plot(bfeats3.pca_cor.ela$sdev, type="b", main="Scree diagram ELA-PCA on cor", xlab="Component number", ylab="Component variance")
plot(bfeats3.pca_cor.ela$sdev, type="b", main="Scree diagram ELA-PCA on cor (elbow)", xlab="Component number", ylab="Component variance")
points(5, bfeats3.pca_cor.ela$sdev[5], col="red", cex=2.5, lwd=1.5, pch=1)
biplot(bfeats3.pca_cor.ela, main="Biplot of ELA-PCA based on cor")
round(summary(bfeats3.pca_cor.ela, loadings = TRUE)$loadings[,1:5], 3)
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on ELA-PCs")
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on ELA-PCs", col=colors[metadata3[,1]],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on PCs", col=colors[bfeats3[,1]],
legend.title = "Topology", legend.text = c("funnel", "random"),
legend.col=colors[1:10])
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on ELA-PCs", col=colors[metadata3[,4]/20],
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on ELA-PCs", col=colors[metadata3[,4]/20],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
pairs_noreg.custom(bfeats3.pca_cor.ela$scores[,1:5], m="Scatterplot on ELA-PCs", col=colors[metadata3[,4]/20],
legend.title="Number of blocks",
legend.text=c("3 blocks", "5 blocks", "7 blocks"), legend.col=colors[c(3,5,7)])
require(scatterplot3d)
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=115, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=95, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[1], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=75, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC", col=colors[bfeats3[,1]], legend.title="Topology",
legend.text=c("funnel", "random"), legend.col=colors[c(1,2)])
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=95, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[metadata3[,4]/20], legend.title="no", legend.col=NULL, legend.text=NULL)
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=95, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[metadata[,4]/20],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=95, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[metadata[,4]/20],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
scatterplot3d.custom(bfeats3.pca_cor.ela$scores[,1], bfeats3.pca_cor.ela$scores[,2], bfeats3.pca_cor.ela$scores[,3],
angle=95, main="3D Scatterplot on 1., 2., 3. ELA-PC", xlab="1 PC",
ylab="2 PC", zlab="3 PC",col=colors[metadata3[,4]/20],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"),
legend.col=colors[1:10])
bfeats3.pca_fgroups = data.frame(
bfeats3.topology,
princomp(bfeats3.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.cm_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.cm_grad, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_curv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_local, corr=TRUE, scores=TRUE)$scores[,1])
bfeats3.pca_fgroups = data.frame(
princomp(bfeats3.cm_angle, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.cm_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.cm_grad, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_conv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_curv, corr=TRUE, scores=TRUE)$scores[,1],
princomp(bfeats3.ela_local, corr=TRUE, scores=TRUE)$scores[,1])
summary(princomp(bfeats3.cm_angle, corr=TRUE, scores=TRUE))  #93.30%
summary(princomp(bfeats3.cm_conv, corr=TRUE, scores=TRUE))  #73.38%
summary(princomp(bfeats3.cm_grad, corr=TRUE, scores=TRUE))  #95.55%
summary(princomp(bfeats3.ela_conv, corr=TRUE, scores=TRUE))  #99.99%
summary(princomp(bfeats3.ela_curv, corr=TRUE, scores=TRUE))  #60.06%
summary(princomp(bfeats3.ela_local, corr=TRUE, scores=TRUE))  #99.80%
colnames(princomp_feat_groups) <- c("cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
colnames(bfeats3.pca_fgroups) <- c("cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs_noreg.custom(bfeats3.pca_fgroups$scores[,1:6], m="Scatterplot on Feature Group-PCs")
pairs_noreg.custom(bfeats3.pca_fgroups[,1:6]$scores[,1], m="Scatterplot on Feature Group-PCs")
pairs_noreg.custom(bfeats3.pca_fgroups[1:6]$scores[,1], m="Scatterplot on Feature Group-PCs")
pairs_noreg.custom(bfeats3.pca_fgroups[1:6]$scores, m="Scatterplot on Feature Group-PCs")
pairs_noreg.custom(bfeats3.pca_fgroups[1:6], m="Scatterplot on Feature Group-PCs")
bfeats3.pca_fgroups[1:6]
str(bfeats3.pca_fgroups[1:6])
pairs_noreg.custom(bfeats3.pca_fgroups[1:6], m="Scatterplot on Feature Group-PCs", col=colors[metadata3[,1]])
pairs_noreg.custom(bfeats3.pca_fgroups[1:6], m="Scatterplot on Feature Group-PCs", col=colors[bfeats3[,1]])
pairs_noreg.custom(bfeats3.pca_fgroups[1:6], m="Scatterplot on Feature Group-PCs", col=colors[bfeats3[,1]],
legend.title = "Topology", legend.text = c("funnel", "random"),
legend.col=colors[1:10])
