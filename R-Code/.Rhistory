load("../3-flacco1.RData")
str(feats)
afeats = feats[,-c(seq(1,5),7)]
str(afeats)
var0feats = which(sapply(1:length(afeats), function(x) {var(afeats[,x])}) == 0)
bfeats = afeats[,-var0feats]
str(bfeats)
bfeats.cm_angle = bfeats[,seq(2,10)]
bfeats.cm_conv = bfeats[,seq(11,15)]
bfeats.cm_grad = bfeats[,seq(16,18)]
bfeats.ela_conv = bfeats[,seq(19,22)]
bfeats.ela_curv = bfeats[,seq(23,45)]
bfeats.ela_local= bfeats[,seq(46,59)]
str(bfeats.cm_conv)
metadata = feats[,c(seq(1,5),7)]
metadata
str(metadaa)
str(metadata)
panel.hist2 <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col="red", ...)
}
#function to print corelations to the upper panels of a scatterplot
panel.cor2 <- function(x, y, digits=2, prefix="", cex.cor=1, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
rsp <- abs(cor(x,y,method="spearman"))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt2 <- format(c(rsp, 0.123456789), digits=digits)[1]
text(0.5, 0.5, paste(txt," / ", txt2,sep=""), cex = cex.cor,col="blue")
}
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2)
}
pairs.custom(bfeats.cm_angle)
# Group 03
# Team Members
# git test
#
#
#
#Part01 Data Preprocessing
#
#All methods which are necessary to preprocess the flacco data for further analysis in Part02.
#-------------------------------------------------------------------------------------------------------
#1.1 Flacco-specific preprocessing
#Special Preprocessing techniques for the special needs of the flacco dataset
#load dataset
load("../3-flacco1.RData")
str(feats)
#exclude the technical features at the beginning of the dataset (such as repl or seed) -> first 7 features
#these features are input parameter to the dataset generator and thus not subject to most of further analysis
#in some analysis it is paid attention to and then we will access by getting this information from metadata
#topology 6 is kept in the dataset as it is some feature of the problem instance (see papers)
afeats = feats[,-c(seq(1,5),7)]
metadata = feats[,c(seq(1,5),7)]
#exclude features with variance of zero
#these do not give further information on the problem instances
#furthermore these features will lead to problems in PCA, etc. because the variance cannot be normalized
#following features are excluded due to that:
#cm_angle.costs_fun_evals, cm_conv.costs_fun_evals, cm_grad.costs_fun_evals, ela_conv.lin_prob,
#ela_conv.costs_fun_evals, ela_curv.sample_size, ela_local.n_loc_opt.abs, ela_local.n_loc_opt.rel
var0feats = which(sapply(1:length(afeats), function(x) {var(afeats[,x])}) == 0)
bfeats = afeats[,-var0feats]
#result is a dataset of 58 expensive features based on the flacco dataset which is used for further tasks
#feature groups (used for detailed inter-group / intra-group analysis)
bfeats.cm_angle = bfeats[,seq(2,10)]
bfeats.cm_conv = bfeats[,seq(11,15)]
bfeats.cm_grad = bfeats[,seq(16,18)]
bfeats.ela_conv = bfeats[,seq(19,22)]
bfeats.ela_curv = bfeats[,seq(23,45)]
bfeats.ela_local= bfeats[,seq(46,59)]
# colors for the functions
colors = c('#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad', '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#95a5a6', '#f39c12', '#d35400', '#c0392b', '#bdc3c7', '#7f8c8d', '#666666', '#FF0000', '#00FF00', '#0000FF', '#FFFF00')
#------------------------------------------------------------------------------------------------------------
#1.1 Visualization
#Visualization of the dataset
#Scatterplots
#function to print histograms to the diagonal panels of a scatterplot
panel.hist2 <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
#window settings
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
#draw rects of the histogram
rect(breaks[-nB], 0, breaks[-1], y, col="red", ...)
}
#function to print corelations to the upper panels of a scatterplot
panel.cor2 <- function(x, y, digits=2, prefix="", cex.cor=1, ...) {
usr <- par("usr"); on.exit(par(usr))
#window settings
par(usr = c(0, 1, 0, 1))
#calculate pearson correlation coefficient
r <- abs(cor(x, y))
#calculate spearman correlation coefficient
rsp <- abs(cor(x,y,method="spearman"))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt2 <- format(c(rsp, 0.123456789), digits=digits)[1]
text(0.5, 0.5, paste(txt," / ", txt2,sep=""), cex = cex.cor,col="blue")
}
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2)
}
pairs.custom(bfeats.cm_angle)
pairs.custom(bfeats.cm_conv)
pairs.custom(bfeats.cm_grad)
pairs.custom(bfeats.ela_conv)
pairs.custom(bfeats.ela_local[,seq(1,7)])
pairs.custom(bfeats.ela_local[,seq(8,14)])
pairs.custom(bfeats.ela_local[,c(3,4,6,7,8,9,10,11,12)])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)])
str(bfeats.ela_curv)
pairs.custom(bfeats.ela_curv[,c(1,8,15)])
pairs.custom(bfeats.ela_curv[,c(,seq(1,7))])
pairs.custom(bfeats.ela_curv[,c(,seq(1,7)])
pairs.custom(bfeats.ela_curv[,seq(1,7)])
bfeats.cm_angle.prcomp = prcomp(bfeats.cm_angle, scale=TRUE)
summary(bfeats.cm_angle.prcomp)
summary(princomp(bfeats.cm_angle, cor=TRUE), loadings=TRUE)
bfeats.cm_conv.prcomp = prcomp(bfeats.cm_conv, scale=TRUE)
bfeats.cm_angle.prcomp = prcomp(bfeats.cm_angle, scale=TRUE)$x[,1]
bfeats.cm_conv.prcomp = prcomp(bfeats.cm_conv, scale=TRUE)$x[,1]
pairs.custom(c(bfeats.cm_angle.prcomp,bfeats.cm_conv.prcomp))
bfeats.cm_angle.prcomp
c(bfeats.cm_angle.prcomp,bfeats.cm_conv.prcomp)
bfeats.cm_angle.prcomp
str(bfeats.cm_angle)
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1])
prcomp_feat_groups = data.frame(
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1])
str(prcomp_feat_groups)
pairs.custom(prcomp_feat_groups)
prcomp_feat_groups = data.frame(
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1],)
pairs.custom(prcomp_feat_groups)
prcomp_feat_groups = data.frame(
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
pairs.custom(prcomp_feat_groups)
colnames(prcomp_feat_groups) <- c("cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
str(prcomp_feat_groups)
pairs.custom(prcomp_feat_groups)
bfeats.topology = bfeats[,1]
prcomp_feat_groups = data.frame(
bfeats.topology,
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
#column names
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs.custom(prcomp_feat_groups)
pairs.custom(prcomp_feat_groups, main="Correlation between Feat. Groups")
?pairs
pairs.custom(prcomp_feat_groups, line.main="Correlation between Feat. Groups")
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x, m) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m)
}
pairs.custom(prcomp_feat_groups, main="Correlation between Feat. Groups")
pairs.custom(prcomp_feat_groups, m="Correlation between Feat. Groups")
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local")
pairs.cor <- function(x) {
abs(cor(x[,1],x[,2]))
}
pairs.cor(bfeats.cm_grad)
pairs.cor <- function(x) {
abs(cor(x[,1:5],x[,2]))
}
pairs.cor(bfeats.cm_grad)
pairs.cor <- function(x) {
sum.corr = 0
for(i in 1:length(x)) {
for(j in 1:length(x)) {
if(i <> j) {
sum.corr = sum.corr + abs(cor(x[,i],x[,j]))
}
}
}
sum.cor
}
pairs.cor <- function(x) {
sum.corr = 0
for(i in 1:length(x)) {
for(j in 1:length(x)) {
#   if(i <> j) {
sum.corr = sum.corr + abs(cor(x[,i],x[,j]))
#   }
}
}
sum.cor
}
pairs.cor(bfeats.cm_grad)
pairs.cor(bfeats.cm_grad)
pairs.cor <- function(x) {
sum.corr = 0
for(i in 1:length(x)) {
for(j in 1:length(x)) {
#   if(i <> j) {
sum.corr = sum.corr + abs(cor(x[,i],x[,j]))
#   }
}
}
sum.corr
}
pairs.cor(bfeats.cm_grad)
pairs.cor <- function(x) {
sum.corr = 0
for(i in 1:length(x)) {
for(j in 1:length(x)) {
if(i != j) {
sum.corr = sum.corr + abs(cor(x[,i],x[,j]))
}
}
}
sum.corr / (length(x)*(length(x) - 1)/2)
}
pairs.cor(bfeats.cm_grad)
pairs.cor <- function(x) {
sum.corr = 0
for(i in 1:length(x)) {
for(j in 1:length(x)) {
if(i != j) {
sum.corr = sum.corr + abs(cor(x[,i],x[,j]))
}
}
}
sum.corr / (length(x)*(length(x) - 1))
}
pairs.cor(bfeats.cm_grad)
pairs.cor(bfeats.cm_angle)
pairs.cor(bfeats.cm_curv)
pairs.cor(bfeats.cm_conv)
pairs.cor(bfeats.ela_curv)
pairs.cor(bfeats.ela_conv)
pairs.cor(bfeats.ela_local)
pairs.cor(prcomp_feat_groups)
bfeats[,1] = factor(bfeats[,1])
str(bfeats[,1])
head(bfeats[,1])
factor(bfeats[,1])
?factor
factor(bfeats.topology)
factor(bfeats.topology, levels=c(1,2))
factor(bfeats.topology, labels=c(1,2))
bfeats[,1] = factor(bfeats[,1], labels=c(1,2))
bfeats.topology = bfeats[,1]
str(bfeats[,1])
prcomp_feat_groups = data.frame(
bfeats.topology,
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
pairs.cor(prcomp_feat_groups)
bfeats[,1] = as.integer(factor(bfeats[,1], labels=c(1,2)))
bfeats[,1] = as.integer(factor(bfeats[,1], labels=c(1,2)))
str(bfeats[,1])
bfeats[,1]
bfeats.topology = bfeats[,1]
prcomp_feat_groups = data.frame(
bfeats.topology,
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups")
pairs.cor(prcomp_feat_groups)
pairs.cor(bfeats.ela_local)
pairs.cor(bfeats.ela_conv)
pairs.cor(bfeats.ela_curv)
pairs.cor(bfeats.cm_conv)
pairs.cor(bfeats.cm_grad)
pairs.cor(bfeats.cm_angle)
pairs.cor(bfeats.cm_angle)
pairs.cor(bfeats.cm_angle)
pairs.cor(bfeats.cm_conv)
pairs.cor(bfeats.cm_grad)
pairs.cor(bfeats.ela_conv)
pairs.cor(bfeats.ela_curv)
pairs.cor(bfeats.ela_local)
#examine amount of pairwise correlation within groups
#high for cm_grad
pairs.cor(bfeats.cm_angle)  #0.4126
pairs.cor(bfeats.cm_conv)   #0.4015
pairs.cor(bfeats.cm_grad)   #0.5945
pairs.cor(bfeats.ela_conv)  #0.3032
pairs.cor(bfeats.ela_curv)  #0.1954
pairs.cor(bfeats.ela_local) #0.2519
pairs.cor(prcomp_feat_groups)
str(metadata)
range(metadata[,1])
range(metadata[,2])
range(metadata[,3])
range(metadata[,4])
range(metadata[,5])
range(metadata[,6])
prcomp_feat_groups = data.frame(
bfeats.topology,
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
#column names
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
#scatterplot3d
#include package
require(scatterplot3d)
#scatterplot3d(x,y,z, angle=55, pch=19, cex.lab=2, type=âh)
scatterplot3d(prcomp_feat_groups$topology, prcomp_feat_groups$topology, prcomp_feat_groups$topology
angle=55, pch=19, cex.lab=2, type="h")
prcomp_feat_groups$topology
scatterplot3d(prcomp_feat_groups$topology, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local
angle=55, pch=19, cex.lab=2, type="h")
scatterplot3d(prcomp_feat_groups$topology, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="h")
?scatterplot3d
scatterplot3d(prcomp_feat_groups$topology, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p")
bfeats[,1] = as.integer(factor(bfeats[,1], labels=c(0,1)))
bfeats.topology = bfeats[,1]
prcomp_feat_groups = data.frame(
bfeats.topology,
prcomp(bfeats.cm_angle, scale=TRUE)$x[,1],
prcomp(bfeats.cm_conv, scale=TRUE)$x[,1],
prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
#column names
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
scatterplot3d(prcomp_feat_groups$topology, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p")
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p")
?persp
persp(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=85, pch=19, cex.lab=2, type="p")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=125, pch=19, cex.lab=2, type="p")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=15, pch=19, cex.lab=2, type="p")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=15, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features")
?scatterplot3d
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=15, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=35, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
#scatterplot3d(x,y,z, angle=55, pch=19, cex.lab=2, type=âh)
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=75, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=65, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=55, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=45, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=135, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$ela_conv, prcomp_feat_groups$ela_curv, prcomp_feat_groups$ela_local,
angle=35, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="ela_conv",
ylab="ela_curv", zlab="ela_local")
scatterplot3d(prcomp_feat_groups$cm_angle, prcomp_feat_groups$cm_conv, prcomp_feat_groups$cm_grad,
angle=35, pch=19, cex.lab=2, type="p", main="3D Scatterplot on ela features", xlab="cm_angle",
ylab="cm_conv", zlab="cm_grad")
