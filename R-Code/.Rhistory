prcomp(bfeats.cm_grad, scale=TRUE)$x[,1],
prcomp(bfeats.ela_conv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_curv, scale=TRUE)$x[,1],
prcomp(bfeats.ela_local, scale=TRUE)$x[,1])
#column names
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
#view scatterplot
#it can be seen that most of the feature_groups have low correlation between each other
#BUT there are obviously some dependencies:
#topology <> ela_curv
#topology <> ela_local
#cm_angle <> cm_curv
#cm_conv <> ela_conv
#ela_curv <> ela_local
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups")
?pairs
pairs(c(1,2,3), c(1,2,3))
pairs(data.frame(x=c(1,2,3),y=c(3,4,5))))
pairs(data.frame(x=c(1,2,3),y=c(3,4,5)))
pairs(data.frame(x=c(1,2,3),y=c(3,4,5)), col="blue")
pairs(data.frame(x=c(1,2,3),y=c(3,4,5)), col="red")
pairs.custom <- function(x, m, col) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=col)
}
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", col=colors[metadata[,1]])
pairs.custom <- function(x, m, color) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
}
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]])
pairs.custom <- function(x, m, color) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x))
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
}
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]])
panel.hist2 <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
#window settings
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
#draw rects of the histogram
rect(breaks[-nB], 0, breaks[-1], y,  ...)
}
pairs.custom <- function(x, m, color) {
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
}
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]])
pairs.custom <- function(x, m, color, legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
par(mar=c(0,0,0,0))
plot.new()
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
par(mar=c(0,0,0,0))
plot.new()
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv")
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]])
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
par(mar=c(0,0,0,0))
plot.new()
#only if legend required
#if(legend.title != "no") {
#  legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
#}
#layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
#layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
#par(mar=c(0,0,0,0))
#plot.new()
#only if legend required
#if(legend.title != "no") {
#  legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
#}
#layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
#par(mar=c(0,0,0,0))
#plot.new()
#only if legend required
#if(legend.title != "no") {
#  legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
#}
#layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv")
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
#par(mar=c(0,0,0,0))
plot.new()
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
#layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
#par(mar=c(0,0,0,0))
#plot.new()
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
#layout(matrix(1, ncol=1))
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]])
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#layout for legend
layout(rbind(1,2), heights=c(7,1))
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend on bottom
par(mar=c(0,0,0,0))
plot.new()
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
#layout(matrix(1, ncol=1))
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
?par
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend
#only if legend required
if(legend.title != "no") {
legend('center','groups',legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0,1,legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
?pairs
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,0.7,legend=legend.text, col=legend.col, pch=19, title=legend.title, bty ="n", horiz=TRUE, cex=0.8)
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
#function to draw a scatterplot with custom upper and diagonal panels
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,0.7,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,0.7,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,1.7,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,0.9,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,12)
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend(0.85,1.2,legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
oma = c(4,4,6,12)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
if(legend.title != "no") {
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("topright",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad")
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
layout(matrix=(1, ncol=1))
layout(matrix(1, ncol=1))
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom <- function(x, m, color=colors[1], legend.title="no", legend.text=NULL, legend.col=NULL) {
#use full window for legend
par(xpd=TRUE)
oma = c(4,4,6,6)
if(legend.title != "no") {
oma = c(4,4,6,12)
}
pairs(x, panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "blue")
#include correlation coefficients in upper panel and histograms on diagonal
}, pch=19, upper.panel=panel.cor2, diag.panel=panel.hist2, main=m, col=color, oma=oma)
#put legend
#only if legend required
if(legend.title != "no") {
legend("right",legend=legend.text, col=legend.col, pch=19, title=legend.title, cex=0.8)
}
}
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
str(metadata)
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,4]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,4]/20],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
colnames(prcomp_feat_groups) <- c("topology", "cm_angle", "cm_conv", "cm_curv", "ela_conv", "ela_curv", "ela_local")
pairs.cor(bfeats.cm_conv)   #0.4015
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,5]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups, m="Correlation between Feature Groups", color=colors[metadata[,6]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(prcomp_feat_groups[2:4], m="Correlation between Feature Groups", color=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv",col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv", col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle")
pairs.custom(bfeats.cm_conv, m="Correlation within Feature Group cm_conv", col=colors[metadata[,6]])
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,1]])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,4]/20])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,5]])
pairs.custom(bfeats.cm_grad, m="Correlation within Feature Group cm_grad",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_curv[,seq(1,7)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_curv[,c(1,8,15)], m="Correlation within Feature Group ela_curv (extract)",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,1]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,4]/20])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,5]])
pairs.custom(bfeats.ela_local[,c(6,7,8,9,10,11,12)], m="Correlation within Feature Group ela_local",col=colors[metadata[,6]])
pairs.custom(bfeats.ela_conv, m="Correlation within Feature Group ela_conv", col=colors[metadata[,4]/20], legend.col=colors[1:10],
legend.title = "Number of peaks", legend.text = c("20 peaks", "40 peaks", "60 peaks",
"80 peaks", "100 peaks", "120 peaks", "140 peaks", "160 peaks","180 peaks", "200 peaks"))
pairs.custom(bfeats.cm_angle, m="Correlation within Feature Group cm_angle",col=colors[metadata[,1]],
legend.title="Number of blocks", legend.text=c("3 blocks", "5 blocks", "7 blocks"),
legend.col = colors[c(3,5,7)])
pairs.custom(dataframe(ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(bfeats.ela_conv.costs_runtime=ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4], peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
str(bfeats.ela_curv)
str(bfeats.ela_local)
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4],
ela_curv.costs_runtime=bfeats.ela_conv[,23],
ela_local.costs_runtime=bfeats.ela_conv[,14],
peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
pairs.custom(data.frame(ela_conv.costs_runtime=bfeats.ela_conv[,4],
ela_curv.costs_runtime=bfeats.ela_curv[,23],
ela_local.costs_runtime=bfeats.ela_local[,14],
peak=metadata[,4]), m="Correlation within Feature Group ela_conv")
str(bfeats.cm_grad)
str(bfeats.cm_conv)
str(bfeats.cm_angle)
pairs.custom(data.frame(cm_angle.costs_runtime=bfeats.cm_angle[,9],
cm_conv.costs_runtime=bfeats.cm_conv[,5],
cm_grad.costs_runtime=bfeats.cm_grad[,3],
peak=metadata[,4]), m="Correlation number of blocks with CM runtime")
#it can be seen that the with increasing number of blocks the costs of the CM functions increase
pairs.custom(data.frame(cm_angle.costs_runtime=bfeats.cm_angle[,9],
cm_conv.costs_runtime=bfeats.cm_conv[,5],
cm_grad.costs_runtime=bfeats.cm_grad[,3],
blocks=metadata[,1]), m="Correlation number of blocks with CM runtime")
